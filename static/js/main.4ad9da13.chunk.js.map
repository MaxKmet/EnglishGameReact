{"version":3,"sources":["Footer.js","TopBar.js","GameCard.js","Album.js","AppStyles.js","SynonymsGameFrame.js","DefinitionsGameFrame.js","AudioGameFrame.js","App.js","serviceWorker.js","index.js"],"names":["Footer","classes","text","className","footer","Typography","variant","align","color","component","TopBar","AppBar","position","Toolbar","noWrap","GameCard","gameCard","Grid","item","xs","sm","md","Card","card","CardMedia","cardMedia","image","title","CardContent","cardContent","gutterBottom","description","CardActions","Button","size","Album","cards","Container","cardGrid","maxWidth","container","spacing","map","key","theme","createMuiTheme","typography","fontFamily","palette","primary","purple","secondary","main","useStyles","makeStyles","icon","marginRight","upperContent","backgroundColor","background","paper","padding","paddingTop","paddingBottom","height","display","flexDirection","flexGrow","root","margin","width","mainChip","chip","section1","section2","section3","SynonymsGameFrame","mainWord","otherWords","state","points","this","alignItems","Divider","wordItem","Chip","label","React","Component","DefinitionsGameFrame","definition","words","AudioGameFrame","audio","correctWord","src","autoPlay","controls","noValidate","autoComplete","TextField","id","App","ThemeProvider","Fragment","CssBaseline","paragraph","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4ad9da13.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nconst Footer = ({ classes, text }) => (\n    <footer className={classes.footer}>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          {text}\n        </Typography>       \n      </footer>\n);\n\nexport default Footer;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\n\nconst TopBar = ({ classes, text }) => (\n      <AppBar position=\"relative\">\n        <Toolbar>         \n          <Typography variant=\"h5\" color=\"inherit\" noWrap>\n            {text}\n          </Typography>\n        </Toolbar>\n      </AppBar>\n        \n);\n\nexport default TopBar;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\nconst GameCard = ({ classes, gameCard }) => (\n  <Grid item xs={12} sm={6} md={4}>\n  <Card className={classes.card}>\n    <CardMedia\n      className={classes.cardMedia}\n      image={gameCard.image}\n      title={gameCard.title}\n    />\n    <CardContent className={classes.cardContent}>\n      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n      {gameCard.title}\n      </Typography>\n      <Typography>\n        {gameCard.description}\n      </Typography>\n    </CardContent>\n    <CardActions>\n      <Button size=\"large\" color=\"primary\">\n        Play\n      </Button>      \n    </CardActions>\n  </Card>\n</Grid>\n);\n\nexport default GameCard;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport GameCard from './GameCard';\n\nexport default function Album({classes, cards}) {\n  return (    \n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          <Grid container spacing={4}>\n            {cards.map((card) => (\n            <GameCard key = {card.key} classes ={classes} gameCard={card}/>              \n            ))}\n          </Grid>\n        </Container>\n  );\n}","import { makeStyles } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    typography: {\n      fontFamily: 'cursive'\n    },\n    \n    palette: {\n      primary: purple,\n      secondary: {\n        main: '#f44336',\n      },\n    },\n  });\n  \nconst cards = [{key:1, title:\"Definition game\", image:\"/definitions.jpg\", description:\"Can you guess a word by its definition ?\"},\n   {key:2, title:\"Voice game\", image:\"/talkingwoman.jpg\", description:\"Can you guess a word by the way it sounds ?\"},\n   {key:3, title:\"Synonyms game\",image:\"/puzzle.jpg\", description:\"Can you find a synonym to a given word ?\"}];\n  \nconst useStyles = makeStyles((theme) => ({\n    icon: {\n      marginRight: theme.spacing(2),\n    },\n    upperContent: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(8, 0, 6),\n    },\n    cardGrid: {\n      paddingTop: theme.spacing(8),\n      paddingBottom: theme.spacing(8),\n    },\n    card: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    cardMedia: {\n      paddingTop: '56.25%',\n    },\n    cardContent: {\n      flexGrow: 1,\n    },\n    footer: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(6),\n    },\n    //Synonyms styles\n    root: {\n        margin: 'auto',\n        width: '100%',\n        maxWidth: 600,\n        backgroundColor: theme.palette.background.paper,\n      },\n      mainChip: {\n        margin: theme.spacing(0.2),\n        size: 'large',\n      },\n      chip: {\n        margin: theme.spacing(0.5),\n      },\n      section1: {\n        margin: theme.spacing(3, 2),\n      },\n      section2: {\n        margin: theme.spacing(2),\n      },\n      section3: {\n        margin: theme.spacing(3, 1, 1),\n      },\n    \n  }));\n  \nexport {theme, cards, useStyles};\n\n  ","import React from 'react';\n\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\n\nexport default class SynonymsGameFrame extends React.Component  {\n\n  constructor({mainWord, otherWords,classes}) {\n    super();\n\n    this.state = {\n      mainWord: mainWord,\n      otherWords: otherWords,\n      classes: classes,\n      points: 10,\n    };\n    \n  }\n  \n  render(){\n  return (\n    <div className={this.state.classes.root}>\n      <div className={this.state.classes.section1}>\n        <Grid container alignItems=\"center\">\n          <Grid item xs>\n            <Typography gutterBottom variant=\"h4\">\n              Find synonym for:\n            </Typography>\n          </Grid>\n          <Grid item>\n          </Grid>\n        </Grid>\n        <Typography gutterBottom variant=\"h6\">\n              {this.state.mainWord}\n        </Typography>\n      </div>\n      <Divider variant=\"middle\" />\n      <div className={this.state.classes.section2}>\n        <div>\n        {this.state.otherWords.map((wordItem) => (\n          <Chip key={wordItem[0]} className={this.state.classes.chip} label= {wordItem[0]} />          \n        ))}          \n        </div>\n      </div>\n      <div className={this.state.classes.section3}>\n        <Button color=\"primary\">Score: {this.state.points}</Button>\n      </div>\n    </div>\n  );\n  }\n}\n\n","import React from 'react';\n\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\n\nexport default class DefinitionsGameFrame extends React.Component  {\n\n  constructor({definition, words, classes}) {\n    super();\n\n    this.state = {\n      definition: definition,\n      words: words,\n      classes: classes,\n      points: 10,\n    };\n    \n  }\n  \n  render(){\n  return (\n    <div className={this.state.classes.root}>\n      <div className={this.state.classes.section1}>\n        <Grid container alignItems=\"center\">\n          <Grid item xs>\n            <Typography gutterBottom variant=\"h4\">\n              What is word for this definition ?\n            </Typography>\n          </Grid>\n          <Grid item>\n          </Grid>\n        </Grid>\n        <Typography gutterBottom variant=\"body1\">\n              {this.state.definition}\n        </Typography>\n      </div>\n      <Divider variant=\"middle\"/>\n      <div className={this.state.classes.section2}>\n        <div>\n        {this.state.words.map((wordItem) => (\n          <Chip key={wordItem[0]} className={this.state.classes.chip} label= {wordItem[0]} />          \n        ))} \n        </div>\n      </div>\n      <div className={this.state.classes.section3}>\n        <Button color=\"primary\">Score: {this.state.points}</Button>\n      </div>\n    </div>\n  );\n  }\n}\n\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport ReactAudioPlayer from 'react-audio-player';\n\n\nexport default class AudioGameFrame extends React.Component  {\n\n  constructor({audio, correctWord, classes}) {\n    super();\n\n    this.state = {\n      audio: audio,\n      correctWord: correctWord,\n      classes: classes,\n      points: 10,\n    };\n    \n  }\n  \n  render(){\n  return (\n    <div className={this.state.classes.root}>\n      <div className={this.state.classes.section1}>\n        <Grid container alignItems=\"center\">\n          <Grid item xs>\n            <Typography gutterBottom variant=\"h4\">\n              Type in the word you hear\n            </Typography>\n          </Grid>\n          <Grid item>\n          </Grid>\n        </Grid>        \n        <ReactAudioPlayer\n          src=\"https://file-examples.com/wp-content/uploads/2017/11/file_example_MP3_700KB.mp3\"\n          autoPlay\n          controls\n        />\n      </div>\n      <Divider variant=\"middle\"/>\n      <div className={this.state.classes.section2}>\n        <div>\n        <form className={this.state.classes.root} noValidate autoComplete=\"off\">        \n        <TextField id=\"outlined-basic\" label=\"Type here\" variant=\"outlined\" />\n      </form>\n      <Chip className={this.state.classes.chip} label= \"Submit\" /> \n        </div>\n      </div>\n      <div className={this.state.classes.section3}>\n        <Button color=\"primary\">Score: {this.state.points}</Button>\n      </div>\n    </div>\n  );\n  }\n}\n\n","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Footer from './Footer';\nimport TopBar from './TopBar';\nimport './App.css';\nimport Album from './Album';\nimport {useStyles, theme, cards} from './AppStyles'\nimport { ThemeProvider } from '@material-ui/core/styles';\n\nimport SynonymsGameFrame from './SynonymsGameFrame'\nimport DefinitionsGameFrame from './DefinitionsGameFrame'\nimport AudioGameFrame from './AudioGameFrame'\n\nconst mainWord = \"mainWord\";\nconst someDefinition = \"A long definition of a difficult term in English\"\nconst otherWords = [[\"Word1\", false],[\"Word2\", true], [\"Word3\", false], [\"Word4\", false]];\nconst sampleAudio = \"audioFile\";\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <React.Fragment>\n      <CssBaseline />\n      <TopBar classes={classes} text=\"Engames\" />\n\n      <main> \n        {/*  Main page    */}\n        <div className={classes.upperContent}>\n          \n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              ENGAMES\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Collection of games for English lovers\n            </Typography>\n          </Container>\n        </div>\n        \n        <Album classes = {classes} cards = {cards}>\n        </Album>\n        \n        {/*Synonym game page ui*/}\n        <SynonymsGameFrame mainWord={mainWord} otherWords={otherWords} classes={classes}></SynonymsGameFrame>\n        {/*Definitions game page ui*/}\n        <DefinitionsGameFrame definition={someDefinition} words={otherWords} classes={classes}></DefinitionsGameFrame>\n        {/*Audio game page ui*/}\n        <AudioGameFrame audio = {sampleAudio} correctWord={mainWord} classes={classes}></AudioGameFrame>\n      </main>\n\n      <Footer classes={classes} text={\"Learn with pleasure!\"}/>\n      </React.Fragment>\n    \n    </ThemeProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}