{"version":3,"sources":["images/definitions.jpg","images/talkingwoman.jpg","images/puzzle.jpg","Footer.js","TopBar.js","AppStyles.js","games/SynonymsGameFrame.js","games/DefinitionsGameFrame.js","games/AudioGameFrame.js","UpperContent.js","GameCard.js","Album.js","MainPageContent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Footer","classes","text","className","footer","Typography","variant","align","color","component","TopBar","AppBar","position","Toolbar","Link","href","underline","noWrap","theme","createMuiTheme","typography","fontFamily","palette","primary","purple","secondary","main","cards","key","title","image","require","description","link","useStyles","makeStyles","icon","marginRight","spacing","upperContent","backgroundColor","background","paper","padding","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","root","margin","width","maxWidth","mainChip","size","chip","section1","section2","section3","SynonymsGameFrame","state","mainWord","otherWords","points","this","Grid","container","alignItems","item","xs","gutterBottom","Divider","map","wordItem","Chip","label","Button","React","Component","DefinitionsGameFrame","definition","words","AudioGameFrame","audio","correctWord","src","autoPlay","controls","noValidate","autoComplete","TextField","id","UpperContent","Container","paragraph","GameCard","gameCard","sm","md","Card","CardMedia","CardContent","CardActions","Album","MainPageContent","App","ThemeProvider","Fragment","CssBaseline","exact","path","props","render","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.09332fc9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/definitions.07d73c46.jpg\";","module.exports = __webpack_public_path__ + \"static/media/talkingwoman.dfc948e4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/puzzle.4fbe3969.jpg\";","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nconst Footer = ({ classes, text }) => (\n    <footer className={classes.footer}>\n        <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n          {text}\n        </Typography>       \n      </footer>\n);\n\nexport default Footer;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport { Link } from '@material-ui/core';\n\nconst TopBar = ({ classes, text }) => (\n      <AppBar position=\"relative\">\n        <Toolbar>         \n          <Link href='/' underline=\"none\" variant=\"h5\" color=\"inherit\" noWrap>\n            {text}\n          </Link>\n        </Toolbar>\n      </AppBar>\n        \n);\n\nexport default TopBar;","import { makeStyles } from '@material-ui/core/styles';\nimport purple from '@material-ui/core/colors/purple';\nimport { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    typography: {\n      fontFamily: 'cursive'\n    },\n    \n    palette: {\n      primary: purple,\n      secondary: {\n        main: '#f44336',\n      },\n    },\n  });\n  \nconst cards = [{key:1, title:\"Definition game\", image:require(\"./images/definitions.jpg\"), description:\"Can you guess a word by its definition ?\", link:\"/definitionsGame\"},\n   {key:2, title:\"Voice game\", image:require(\"./images/talkingwoman.jpg\"), description:\"Can you guess a word by the way it sounds ?\", link:\"/audioGame\"},\n   {key:3, title:\"Synonyms game\",image:require(\"./images/puzzle.jpg\"), description:\"Can you find a synonym to a given word ?\", link:\"/synonymsGame\"}];\n  \nconst useStyles = makeStyles((theme) => ({\n    icon: {\n      marginRight: theme.spacing(2),\n    },\n    upperContent: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(8, 0, 6),\n    },\n    cardGrid: {\n      paddingTop: theme.spacing(8),\n      paddingBottom: theme.spacing(8),\n    },\n    card: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    cardMedia: {\n      paddingTop: '56.25%',\n    },\n    cardContent: {\n      flexGrow: 1,\n    },\n    footer: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(6),\n    },\n    //Synonyms styles\n    root: {\n        margin: 'auto',\n        width: '100%',\n        maxWidth: 600,\n        backgroundColor: theme.palette.background.paper,\n      },\n      mainChip: {\n        margin: theme.spacing(0.2),\n        size: 'large',\n      },\n      chip: {\n        margin: theme.spacing(0.5),\n      },\n      section1: {\n        margin: theme.spacing(3, 2),\n      },\n      section2: {\n        margin: theme.spacing(2),\n      },\n      section3: {\n        margin: theme.spacing(3, 1, 1),\n      },\n    \n  }));\n  \nexport {theme, cards, useStyles};\n\n  ","import React from 'react';\n\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\n\nexport default class SynonymsGameFrame extends React.Component  {\n\n  constructor({classes}) {\n    super();\n\n    this.state = {\n      mainWord: \"mainWord\",\n      otherWords: [[\"Word1\", false],[\"Word2\", true], [\"Word3\", false], [\"Word4\", false]],\n      classes: classes,\n      points: 10,\n    };\n    \n  }\n  \n  render(){\n  return (\n    <div className={this.state.classes.root}>\n      <div className={this.state.classes.section1}>\n        <Grid container alignItems=\"center\">\n          <Grid item xs>\n            <Typography gutterBottom variant=\"h4\">\n              Find synonym for:\n            </Typography>\n          </Grid>\n          <Grid item>\n          </Grid>\n        </Grid>\n        <Typography gutterBottom variant=\"h6\">\n              {this.state.mainWord}\n        </Typography>\n      </div>\n      <Divider variant=\"middle\" />\n      <div className={this.state.classes.section2}>\n        <div>\n        {this.state.otherWords.map((wordItem) => (\n          <Chip key={wordItem[0]} className={this.state.classes.chip} label= {wordItem[0]} />          \n        ))}          \n        </div>\n      </div>\n      <div className={this.state.classes.section3}>\n        <Button color=\"primary\">Score: {this.state.points}</Button>\n      </div>\n    </div>\n  );\n  }\n}\n\n","import React from 'react';\n\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\n\n\nexport default class DefinitionsGameFrame extends React.Component  {\n\n  constructor({classes}) {\n    super();\n\n    this.state = {\n      definition: \"A long definition of a difficult term in English\",\n      words: [[\"Word1\", false],[\"Word2\", true], [\"Word3\", false], [\"Word4\", false]],\n      classes: classes,\n      points: 10,\n    };\n    \n  }\n  \n  render(){\n  return (\n    <div className={this.state.classes.root}>\n      <div className={this.state.classes.section1}>\n        <Grid container alignItems=\"center\">\n          <Grid item xs>\n            <Typography gutterBottom variant=\"h4\">\n              What is word for this definition ?\n            </Typography>\n          </Grid>\n          <Grid item>\n          </Grid>\n        </Grid>\n        <Typography gutterBottom variant=\"body1\">\n              {this.state.definition}\n        </Typography>\n      </div>\n      <Divider variant=\"middle\"/>\n      <div className={this.state.classes.section2}>\n        <div>\n        {this.state.words.map((wordItem) => (\n          <Chip key={wordItem[0]} className={this.state.classes.chip} label= {wordItem[0]} />          \n        ))} \n        </div>\n      </div>\n      <div className={this.state.classes.section3}>\n        <Button color=\"primary\">Score: {this.state.points}</Button>\n      </div>\n    </div>\n  );\n  }\n}\n\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport Chip from '@material-ui/core/Chip';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Typography from '@material-ui/core/Typography';\nimport ReactAudioPlayer from 'react-audio-player';\n\n\nexport default class AudioGameFrame extends React.Component  {\n\n  constructor({classes}) {\n    super();\n\n    this.state = {\n      audio: \"Sample Audio\",\n      correctWord: \"Main Word\",\n      classes: classes,\n      points: 10,\n    };\n    \n  }\n  \n  render(){\n  return (\n    <div className={this.state.classes.root}>\n      <div className={this.state.classes.section1}>\n        <Grid container alignItems=\"center\">\n          <Grid item xs>\n            <Typography gutterBottom variant=\"h4\">\n              Type in the word you hear\n            </Typography>\n          </Grid>\n          <Grid item>\n          </Grid>\n        </Grid>        \n        <ReactAudioPlayer\n          src=\"https://www.soundhelix.com/examples/mp3/SoundHelix-Song-2.mp3\"\n          autoPlay\n          controls\n        />\n      </div>\n      <Divider variant=\"middle\"/>\n      <div className={this.state.classes.section2}>\n        <div>\n        <form className={this.state.classes.root} noValidate autoComplete=\"off\">        \n        <TextField id=\"outlined-basic\" label=\"Type here\" variant=\"outlined\" />\n      </form>\n      <Chip className={this.state.classes.chip} label= \"Submit\" /> \n        </div>\n      </div>\n      <div className={this.state.classes.section3}>\n        <Button color=\"primary\">Score: {this.state.points}</Button>\n      </div>\n    </div>\n  );\n  }\n}\n\n","import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\n\nexport default function UpperContent ({ classes }){\nreturn(<div className={classes.upperContent}>\n          \n          <Container maxWidth=\"sm\">\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n              ENGAMES\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n              Collection of games for English lovers\n            </Typography>\n          </Container>\n        </div>);\n}\n\n\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\n\n\nconst GameCard = ({ classes, gameCard }) => (\n  <Grid item xs={12} sm={6} md={4}>\n  <Card className={classes.card}>\n    <CardMedia\n      className={classes.cardMedia}\n      image={gameCard.image}\n      title={gameCard.title}\n    />\n    <CardContent className={classes.cardContent}>\n      <Typography gutterBottom variant=\"h5\" component=\"h2\">\n      {gameCard.title}\n      </Typography>\n      <Typography>\n        {gameCard.description}\n      </Typography>\n    </CardContent>\n    <CardActions>\n      <Button href={gameCard.link} size=\"large\" color=\"primary\">\n        Play\n      </Button>      \n    </CardActions>\n  </Card>\n</Grid>\n);\n\nexport default GameCard;","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport GameCard from './GameCard';\n\nexport default function Album({classes, cards}) {\n  return (    \n        <Container className={classes.cardGrid} maxWidth=\"md\">\n          <Grid container spacing={4}>\n            {cards.map((card) => (\n            <GameCard key = {card.key} classes ={classes} gameCard={card}/>           \n            ))}\n          </Grid>\n        </Container>\n  );\n}","import React from 'react';\n\nimport UpperContent from './UpperContent'\nimport Album from './Album';\n\nconst MainPageContent = ({ classes, cards }) => (\n    <div>\n<UpperContent classes={classes}/>\n    <Album classes = {classes} cards = {cards}>\n    </Album>\n    </div>\n    );\n    \nexport default MainPageContent;","import React from 'react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport Footer from './Footer';\nimport TopBar from './TopBar';\nimport './App.css';\n\nimport {useStyles, theme, cards} from './AppStyles'\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport SynonymsGameFrame from './games/SynonymsGameFrame'\nimport DefinitionsGameFrame from './games/DefinitionsGameFrame'\nimport AudioGameFrame from './games/AudioGameFrame'\nimport MainPageContent from './MainPageContent'\n\n\nfunction App() {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <React.Fragment>\n      <CssBaseline />\n      <TopBar classes={classes} text=\"Engames\" />\n\n      <main> \n      <BrowserRouter>\n      <Switch>\n        <Route exact={true} path='/' component={(props)=><MainPageContent {...props} classes={classes} cards={cards}/>}/>\n        <Route exact={true} path='/synonymsGame' render={()=><SynonymsGameFrame  classes={classes}/>}/>\n        <Route exact={true} path='/definitionsGame' render={()=><DefinitionsGameFrame   classes={classes}/>}/>\n        <Route exact={true} path='/audioGame' render={()=><AudioGameFrame classes={classes}/>}/>\n      </Switch>\n      </BrowserRouter>\n      </main>\n\n      <Footer classes={classes} text={\"Learn with pleasure!\"}/>\n      </React.Fragment>\n    \n    </ThemeProvider>\n\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}